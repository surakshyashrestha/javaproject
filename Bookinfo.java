
import bookinfo.table;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author hp
 */
public class Bookinfo extends javax.swing.JFrame {

    DefaultTableModel tableModel;
    public ArrayList<table> addtotable = new ArrayList<>();

    public Bookinfo() {
        initComponents();
        tableModel = (DefaultTableModel) jTable1.getModel();
        dataadd();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        languageRadioGroup = new javax.swing.ButtonGroup();
        addBookBtn = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        clearBtn = new javax.swing.JButton();
        searchText = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        priceComboBox = new javax.swing.JTextField();
        price = new javax.swing.JLabel();
        language = new javax.swing.JLabel();
        englishRadioButton = new javax.swing.JRadioButton();
        nepaliRadioButton = new javax.swing.JRadioButton();
        authorComboBox = new javax.swing.JComboBox<>();
        bookNameText = new javax.swing.JTextField();
        genreComboBox = new javax.swing.JComboBox<>();
        bookNoText = new javax.swing.JTextField();
        genre = new javax.swing.JLabel();
        bookName = new javax.swing.JLabel();
        author = new javax.swing.JLabel();
        bookNo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        location = new javax.swing.JLabel();
        locationIcon = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        emailIcon = new javax.swing.JLabel();
        phoneNumber = new javax.swing.JLabel();
        phoneIcon = new javax.swing.JLabel();
        children = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        open = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();

        fileChooser.setDialogTitle("This is my open dialog.");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 255, 51));
        setSize(new java.awt.Dimension(500, 300));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addBookBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        addBookBtn.setText("Add Book");
        addBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addBookBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, -1, 30));

        title.setFont(new java.awt.Font("Ink Free", 1, 60)); // NOI18N
        title.setText("Pustakalaya");
        title.setToolTipText("");
        getContentPane().add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 70, 360, -1));

        clearBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        getContentPane().add(clearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 440, -1, 30));

        searchText.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        searchText.setForeground(new java.awt.Color(102, 102, 102));
        searchText.setText("Search By Price");
        searchText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFocusLost(evt);
            }
        });
        searchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextActionPerformed(evt);
            }
        });
        getContentPane().add(searchText, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 440, 170, -1));

        searchBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });
        getContentPane().add(searchBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 440, -1, 30));

        priceComboBox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        priceComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(priceComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 130, -1));

        price.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        price.setText("Price:");
        getContentPane().add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, -1, -1));

        language.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        language.setText("Language:");
        getContentPane().add(language, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, -1, -1));

        languageRadioGroup.add(englishRadioButton);
        englishRadioButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        englishRadioButton.setText("English");
        getContentPane().add(englishRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 350, -1, -1));

        languageRadioGroup.add(nepaliRadioButton);
        nepaliRadioButton.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        nepaliRadioButton.setText("Nepali");
        getContentPane().add(nepaliRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 350, -1, -1));

        authorComboBox.setBackground(new java.awt.Color(255, 204, 102));
        authorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--------------------------", "J.K. Rowling", "Arthur Conan Doyle", "Amish Tripathi", "Rahul Badami", "Sameer Kamat", "Nelson Mandela" }));
        getContentPane().add(authorComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, -1, -1));

        bookNameText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        bookNameText.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bookNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookNameTextActionPerformed(evt);
            }
        });
        getContentPane().add(bookNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 260, 130, -1));

        genreComboBox.setBackground(new java.awt.Color(255, 204, 102));
        genreComboBox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        genreComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--------------------------", "Action and Adventure", "History", "Fiction", "Non-Fiction", "Romance" }));
        genreComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genreComboBoxActionPerformed(evt);
            }
        });
        getContentPane().add(genreComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 130, -1));

        bookNoText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        bookNoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookNoTextActionPerformed(evt);
            }
        });
        getContentPane().add(bookNoText, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 130, -1));

        genre.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        genre.setText("Genre:");
        getContentPane().add(genre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, -1, -1));

        bookName.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bookName.setText("Book Name:");
        getContentPane().add(bookName, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        author.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        author.setText("Author:");
        getContentPane().add(author, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        bookNo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bookNo.setText("Book No:");
        getContentPane().add(bookNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book No.", "Genre", "Book Name", "Author", "Language", "Rate"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(5);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(25);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(20);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 930, 210));

        location.setFont(new java.awt.Font("Ink Free", 1, 20)); // NOI18N
        location.setText("BAGHTOLE,BAGLUNG");
        getContentPane().add(location, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 530, -1, -1));

        locationIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/location.png"))); // NOI18N
        getContentPane().add(locationIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 520, -1, -1));

        email.setFont(new java.awt.Font("Ink Free", 1, 20)); // NOI18N
        email.setText("pustakalaya@gmail.com");
        getContentPane().add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 530, -1, -1));

        emailIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mail.png"))); // NOI18N
        getContentPane().add(emailIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 530, -1, -1));

        phoneNumber.setFont(new java.awt.Font("Ink Free", 1, 20)); // NOI18N
        phoneNumber.setText("01-4568997");
        getContentPane().add(phoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 530, -1, -1));

        phoneIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/phone.png"))); // NOI18N
        getContentPane().add(phoneIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 530, -1, -1));

        children.setIcon(new javax.swing.ImageIcon(getClass().getResource("/children.png"))); // NOI18N
        getContentPane().add(children, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 10, -1, -1));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/background.jpg"))); // NOI18N
        getContentPane().add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jMenu5.setText("File");

        open.setText("Open");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        jMenu5.add(open);

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        jMenu5.add(exit);

        jMenuBar2.add(jMenu5);

        help.setText("Help");
        help.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                helpMouseClicked(evt);
            }
        });
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        jMenuBar2.add(help);

        setJMenuBar(jMenuBar2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean noDuplicateData(String productModel, int index) {
        boolean noDup = false;
        int rows = jTable1.getRowCount();
        int count = 0;
        for (int j = 0; j < rows; j++) {
            if (String.valueOf(jTable1.getValueAt(j, index)).equals(productModel)) {
                count++;
            }
        }
        if (count == 0) {
            noDup = true;
            System.out.println(noDup);
        }
        return noDup;
    }


    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String searchValue = searchText.getText();
        int rowCount = jTable1.getModel().getRowCount();
        int colCount = jTable1.getModel().getColumnCount();
        System.out.print("ROWCOUNT" + rowCount);

        int nextRow = 0;
        boolean emptyRow = false;
        try {
            if (rowCount != 0) {
                do {
                    if (jTable1.getValueAt(nextRow, 0) != null) {
                        nextRow++;

                    } else {
                        emptyRow = true;
                    }
                } while (nextRow < rowCount && !emptyRow);
                System.out.println("NextRow " + nextRow);

                int price[] = new int[nextRow];
                System.out.println(price.length);
                for (int i = 0; i < nextRow; i++) {
                    String value = jTable1.getModel().getValueAt(i, 5).toString();
                    System.out.println("String " + value);
                    int valNum = Integer.parseInt(value);
                    price[i] = valNum;
                    System.out.print(Arrays.toString(price));
                }
                System.out.println(Arrays.toString(price));
                sort(price);
                System.out.println(Arrays.toString(price));
                int low = 0;
                int high = price.length;
                int valueInt = Integer.parseInt(searchValue);
                int search = numberSearch(price, low, high, valueInt);
                System.out.print(" ");
                if (search != -1) {
                    String val = String.valueOf(price[search]);
                    System.out.print("here 1:" + val);
                    String searchArray[] = new String[6];
                    int rowNext = 0;
                    int rowSearch = 0;
                    boolean emptyCheckPrice = false;

                    if (rowCount != 0) {
                        do {
                            if (jTable1.getValueAt(rowNext, 0) != null) {
                                System.out.println(rowNext);
                                String valTable = jTable1.getModel().getValueAt(rowNext, 5).toString();
                                System.out.println("from table" + valTable);
                                if (val.equals(valTable)) {
                                    for (int i = 0; i < colCount; i++) {
                                        searchArray[i] = jTable1.getModel().getValueAt(rowNext, i).toString();
                                    }
                                    System.out.println("from array" + val);
                                    System.out.println(Arrays.toString(searchArray));
                                    JOptionPane.showMessageDialog(null, Arrays.toString(searchArray));
                                    rowSearch++;

                                }
                                rowNext++;
                            } else {
                                emptyCheckPrice = true;
                            }
                        } while (rowNext < rowCount && !emptyCheckPrice);
                    }
                    System.out.println(rowNext);
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No entry found.");
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error: Enter Valid Input!");
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // TODO add your handling code here:
        JFileChooser open = new JFileChooser();
        open.showOpenDialog(null);
        File f = open.getSelectedFile();
        try {
            BufferedReader br = new BufferedReader(new FileReader("src/open.txt"));
            Object[] tableLines = br.lines().toArray();

            for (Object tableLine : tableLines) {
                String line = tableLine.toString().trim();
                String[] dataRow = line.split(",");
            }
        }
            catch(Exception e){  
                JOptionPane.showMessageDialog(rootPane, "Please select text file.");
            }
    }//GEN-LAST:event_openActionPerformed

    private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed

    }//GEN-LAST:event_helpActionPerformed

    private void helpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_helpMouseClicked
        JOptionPane.showMessageDialog(null, "<html><b>Hello! <br>"
                + "This Information System will let you find the books. Follow following steps: <br>"
                + "<br>"
                + "<u>For Admin: </u> </b> <br>"
                + "You have to enter the data in required field. <br>"
                + "The 'ADD' button will add the data into the table. <br>"
                + "The 'CLEAR' button will clear all the fields in the system. <br>");

    }//GEN-LAST:event_helpMouseClicked

    private void searchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusLost
        if (searchText.getText().equals("")) {
            searchText.setText("Search By Price");
            searchText.setForeground(new Color(102, 102, 102, 102));
        }
    }//GEN-LAST:event_searchTextFocusLost

    private void searchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusGained
        if (searchText.getText().equals("Search By Price")) {
            searchText.setText("");
            searchText.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_searchTextFocusGained

    private void addBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookBtnActionPerformed

        try {
            int bookid = Integer.parseInt(bookNoText.getText());
            String genre = (String) genreComboBox.getSelectedItem();
            String bookname = bookNameText.getText();
            String author = (String) authorComboBox.getSelectedItem();
            String language = null;
            if (englishRadioButton.isSelected()) {
                language = englishRadioButton.getText();
            } else if (nepaliRadioButton.isSelected()) {
                language = nepaliRadioButton.getText();
            }
            int rate = Integer.parseInt(priceComboBox.getText());
            table tab = new table(bookid, genre, bookname, author, language, rate);
            if (bookid > 0) {
                if (noDuplicateData(bookname, 2)) {
                    if (genreComboBox.getSelectedIndex() != 0) {
                        if (!bookname.isEmpty()) {
                            if (authorComboBox.getSelectedIndex() != 0) {
                                if (language != null) {
                                    if (rate > 0) {
                                        addtotable.add(tab);
                                        tableModel.addRow(tab.getbook());
                                        JOptionPane.showMessageDialog(rootPane, "Book Added!");
                                    } else {
                                        JOptionPane.showMessageDialog(rootPane, "Please input the rate");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(rootPane, "Please select the language");
                                }
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Please select the author.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "Please enter the book name.");
                        }
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Please select the genre.");
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Duplicate Entries Found!");
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Please input the bookid");
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Error: Invalid Input!");
        }
    }//GEN-LAST:event_addBookBtnActionPerformed

    private void priceComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceComboBoxActionPerformed

    }//GEN-LAST:event_priceComboBoxActionPerformed

    private void bookNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookNameTextActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        bookNoText.setText("");
        genreComboBox.setSelectedIndex(0);
        bookNameText.setText("");
        authorComboBox.setSelectedIndex(0);
        languageRadioGroup.clearSelection();
        priceComboBox.setText("");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void bookNoTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookNoTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookNoTextActionPerformed

    private void genreComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genreComboBoxActionPerformed

    }//GEN-LAST:event_genreComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bookinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bookinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bookinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bookinfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bookinfo().setVisible(true);
            }
        });
    }

    public void dataadd() {
        table b1 = new table(1, "Horror", "Goosebumps", "R.L. Stine", "English", 1500);
        table b2 = new table(2, "Mystery", "The famous five", "Enid Blyton", "English", 1200);
        table b3 = new table(3, "Fantasy", "The folk of the faraway tree", "Enid Blyton", "English", 2250);
        table b4 = new table(4, "Young Adult Fiction", "The Hardy Boys", "Franklin W. Dixion", "English", 2200);
        table b5 = new table(5, "Epic fantasy", "A song of ice and fire", "George R.R. Martin", "English", 2500);
        table b6 = new table(6, "Adventure", "One Piece", "Echiro Oda", "English", 1100);
        table b7 = new table(7, "Novel", "Shirishko Phool", "Parijat", "Nepali", 510);
        table b8 = new table(8, "Sci-Fi", "The Time Machine", "H.G. Wells", "English", 3500);
        table b9 = new table(9, "Romance", "2 States", "Chetan Bhagat", "English", 550);
        table b10 = new table(10, "Autobiography", "China Harayeko Manchhe", "Hari Bansha Acharya", "Nepali", 900);
        
        tableModel.addRow(b1.getbook());
        tableModel.addRow(b2.getbook());
        tableModel.addRow(b3.getbook());
        tableModel.addRow(b4.getbook());
        tableModel.addRow(b5.getbook());
        tableModel.addRow(b6.getbook());
        tableModel.addRow(b7.getbook());
        tableModel.addRow(b8.getbook());
        tableModel.addRow(b9.getbook());
        tableModel.addRow(b10.getbook());

        addtotable.add(b1);
        addtotable.add(b2);
        addtotable.add(b3);
        addtotable.add(b4);
        addtotable.add(b5);
        addtotable.add(b6);
        addtotable.add(b7);
        addtotable.add(b8);
        addtotable.add(b9);
        addtotable.add(b10);
    }

    public int numberSearch(int[] a, int low, int high, int value) {
        if (low <= high) {
            try {
                int mid = (low + high) / 2;
                if (a[mid] == value) {
                    return mid;
                } else if (a[mid] < value) {
                    System.out.print("mid " + mid);
                    return numberSearch(a, mid + 1, high, value);
                } else {
                    System.out.print("mid " + mid);
                    return numberSearch(a, low, mid - 1, value);
                }
            } catch (Exception e) {
                return -1;
            }
        } else {
            return -1;
        }
    }

    public static void swap(int[] a, int i, int j) {
        int temp = a[i];
        a[i] = a[j];
        a[j] = temp;
    }

    public static void sort(int[] a) {
        for (int i = 0; i < a.length - 1; i++) {
            int minPos = minimumPosition(a, i);
            Bookinfo.swap(a, minPos, i);
        }
    }

    public static int minimumPosition(int[] a, int from) {
        int minPos = from;
        for (int i = from + 1; i < a.length; i++) {
            if (a[i] < a[minPos]) {
                minPos = i;
            }
        }
        return minPos;

    }

    public static int searchString(String[] arr, String x) {
        try {
            int l = 0, r = arr.length - 1;
            while (l <= r) {
                int m = l + (r - 1) / 2;
                int res = x.compareTo(arr[m]);
                if (res == 0) {
                    return m;
                } else if (res > 0) {
                    l = m + 1;
                } else if (res < 0) {
                    r = m - 1;
                }
            }
        } catch (Exception e) {

            return -1;
        }
        return - 1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBookBtn;
    private javax.swing.JLabel author;
    private javax.swing.JComboBox<String> authorComboBox;
    private javax.swing.JLabel background;
    private javax.swing.JLabel bookName;
    private javax.swing.JTextField bookNameText;
    private javax.swing.JLabel bookNo;
    private javax.swing.JTextField bookNoText;
    private javax.swing.JLabel children;
    private javax.swing.JButton clearBtn;
    private javax.swing.JLabel email;
    private javax.swing.JLabel emailIcon;
    private javax.swing.JRadioButton englishRadioButton;
    private javax.swing.JMenuItem exit;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel genre;
    private javax.swing.JComboBox<String> genreComboBox;
    private javax.swing.JMenu help;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel language;
    private javax.swing.ButtonGroup languageRadioGroup;
    private javax.swing.JLabel location;
    private javax.swing.JLabel locationIcon;
    private javax.swing.JRadioButton nepaliRadioButton;
    private javax.swing.JMenuItem open;
    private javax.swing.JLabel phoneIcon;
    private javax.swing.JLabel phoneNumber;
    private javax.swing.JLabel price;
    private javax.swing.JTextField priceComboBox;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchText;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
